# .github/workflows/business-deploy.yml
name: Business Service Deploy

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'services/business/**'
      - 'config/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy business service
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.SERVER_IP }} '
            PROJECT_DIR="/opt/Pilot_Project"
            SERVICE_DIR="$PROJECT_DIR/services/business"
            CONFIG_DIR="$PROJECT_DIR/config"

            # 1️⃣ 디렉토리 생성 및 권한 설정
            sudo mkdir -p $SERVICE_DIR/compose
            sudo mkdir -p $CONFIG_DIR
            sudo chown -R ubuntu:ubuntu $PROJECT_DIR

            # 2️⃣ Git 초기화 및 최신화
            cd $PROJECT_DIR
            if [ ! -d ".git" ]; then
                git init
            fi
            git remote get-url pilot >/dev/null 2>&1 || git remote add pilot ${{ secrets.PILOT_REPO_URL }}
            git fetch pilot main
            git reset --hard pilot/main

            # 3️⃣ 환경파일 생성
            echo "${{ secrets.BUSINESS_MAIN_ENV }}" | sudo tee $CONFIG_DIR/main.env > /dev/null

            # 4️⃣ 기존 컨테이너 종료 및 제거
            sudo docker-compose -f $SERVICE_DIR/compose/docker-compose.prod.yml down || true

            # 5️⃣ 새 이미지 빌드 (캐시 무효화) 및 컨테이너 실행
            sudo docker-compose -f $SERVICE_DIR/compose/docker-compose.prod.yml build --no-cache
            sudo docker-compose -f $SERVICE_DIR/compose/docker-compose.prod.yml up -d

            # 6️⃣ Nginx 재시작
            sudo systemctl reload nginx
          '
