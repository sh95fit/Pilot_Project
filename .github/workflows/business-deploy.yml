# .github/workflows/business-deploy.yml
name: Business Service Deploy

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'services/business/**'      
      - 'config/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ 소스코드 체크아웃
      - name: Checkout
        uses: actions/checkout@v3

      # 2️⃣ SSH 설정 (OCI 서버 접속용)
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # 3️⃣ prod 배포
      - name: Deploy business service
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.SERVER_IP }} '
          PROJECT_DIR="/opt/Pilot_Project"
          SERVICE_DIR="$PROJECT_DIR/services/business"
          CONFIG_DIR="$PROJECT_DIR/config"

          # 필요한 디렉토리 생성 및 권한 설정
          sudo mkdir -p $SERVICE_DIR/compose
          sudo mkdir -p $CONFIG_DIR
          sudo chown -R ubuntu:ubuntu $PROJECT_DIR

          # 서버에서 소스코드 최신화
          cd $PROJECT_DIR
          if [ ! -d ".git" ]; then
              git init
              git remote add pilot ${{ secrets.PILOT_REPO_URL }}
          fi
          git fetch pilot main
          git reset --hard pilot/main

          # prod 환경파일 생성
          echo "${{ secrets.BUSINESS_MAIN_ENV }}" | sudo tee $CONFIG_DIR/main.env > /dev/null

          # 컨테이너 종료 및 새 컨테이너 빌드/실행
          cd $SERVICE_DIR/compose
          sudo docker-compose -f docker-compose.yml -f docker-compose.prod.yml down
          sudo docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d --build

          # Nginx 재시작
          sudo nginx -t
          sudo systemctl restart nginx
          '
